<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: alignment | Adam Ginsburg's Astro Blog]]></title>
  <link href="http://keflavich.github.com/blog/categories/alignment/atom.xml" rel="self"/>
  <link href="http://keflavich.github.com/"/>
  <updated>2012-12-28T17:22:06-07:00</updated>
  <id>http://keflavich.github.com/</id>
  <author>
    <name><![CDATA[Adam Ginsburg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Cross-Correlation Offsets Revisited]]></title>
    <link href="http://keflavich.github.com/blog/2012/09/08/cross-correlation-offsets-revisited/"/>
    <updated>2012-09-08T02:05:00-06:00</updated>
    <id>http://keflavich.github.com/blog/2012/09/08/cross-correlation-offsets-revisited</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Since last time (<a href="http://bolocam.blogspot.com/2009/03/43-relative-alignment-and-mosaicing.html">Taylor Expansion &amp; Cross Correlation</a><a href="">, </a><a href="http://bolocam.blogspot.com/2012/03/new-coalignment-code.html">Coalignment Code</a>), I have attempted to re-do the cross-correlation with an added component: error estimates.<br /><br />It turns out, there is a better method than the Taylor-expansion around the cross-correlation peak. &nbsp;Fourier upsampling can be used to efficiently determine precise sub-pixel offsets (<a href="http://www.mathworks.com/matlabcentral/fileexchange/18401-efficient-subpixel-image-registration-by-cross-correlation/content/html/efficient_subpixel_registration.html">matlab version</a>, <a href="http://people.web.psi.ch/guizar_m/main/">Manuel Guizar, author</a>, <a href="http://www.opticsinfobase.org/view_article.cfm?gotourl=http%3A%2F%2Fwww%2Eopticsinfobase%2Eorg%2FDirectPDFAccess%2F6C566DF3-B5C5-B342-97F01180999C7632_148843%2Fol-33-2-156%2Epdf%3Fda%3D1%26id%3D148843%26seq%3D0%26mobile%3Dno&amp;org=University%20of%20Colorado%20at%20Boulder%20Library">refereed article</a>).<br /><br />However, in the published methods just cited, there is no way to determine the error - those algorithms are designed to measure offsets between identical images corrupted by noise but still strongly dominated by signal.<br /><br />We're more interested in the case where individual pixels may well be noise-dominated, but the overall signal in the map is still large.<br /><br />So, I've developed a python translation of the above codes and then some.<br /><br /><a href="https://github.com/keflavich/image_registration">Image Registration on github</a><br /><br />The docstrings are pretty solid, but there is no overall documentation.<br /><br />However, there's a pretty good demo of the simulation AND fitting code here:<br /><a href="https://github.com/keflavich/image_registration/blob/master/doc/CrossCorrelationSimulation.pdf?raw=true">Tests and Examples</a><br /><br />The results for the Bolocam data are here (only applied to v2-Herschel offsets):<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-PMJx-wX23w8/UErt7G3PqfI/AAAAAAAAHOQ/-5xD6ReBRGs/s1600/Offsets_XYplot.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="320" src="http://2.bp.blogspot.com/-PMJx-wX23w8/UErt7G3PqfI/AAAAAAAAHOQ/-5xD6ReBRGs/s320/Offsets_XYplot.png" width="320" /></a></div><br /></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New coalignment code]]></title>
    <link href="http://keflavich.github.com/blog/2012/03/20/new-coalignment-code/"/>
    <updated>2012-03-20T09:08:00-06:00</updated>
    <id>http://keflavich.github.com/blog/2012/03/20/new-coalignment-code</id>
    <content type="html"><![CDATA[<div class='post'>
pixshift has been giving me issues for a long, long time.  It finally came to a head, though, when nothing I did could make l001 "work".  It turns out, when you do cross-correlation analysis, you're really only interested in the most correlated pixel, NOT the junk around it - the junk around it only provides a second-order correction.<br /><br />Well, <a href="http://solarmuri.ssl.berkeley.edu/~welsch/public/software/cross_cor_taylor.pro">cross_cor_taylor.pro</a>, a tool from the solar physics community, does exactly that.  And it works far, far better than my hacked-together pixshift code.  A lesson I should always take to heart: don't rewrite code if it's out there.  Of course, if I'd known it was out there, I wouldn't have rewritten it....<br /><br />This is how good it looks now:<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/--IDiMhSOWSg/T2idophFD3I/AAAAAAAAGxo/uwPBB9YWwrg/s1600/l029_align_to_reference.png" imageanchor="1" style="margin-left:1em; margin-right:1em"><img border="0" height="214" width="320" src="http://2.bp.blogspot.com/--IDiMhSOWSg/T2idophFD3I/AAAAAAAAGxo/uwPBB9YWwrg/s320/l029_align_to_reference.png" /></a></div><br /><br /><br />(the circle has radius 6", or 1-sigma)</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scripting the Whole Survey]]></title>
    <link href="http://keflavich.github.com/blog/2008/09/15/scripting-whole-survey/"/>
    <updated>2008-09-15T17:59:00-06:00</updated>
    <id>http://keflavich.github.com/blog/2008/09/15/scripting-whole-survey</id>
    <content type="html"><![CDATA[<div class='post'>
First, discovered more fields with some sort of failure:<br /><pre>ls -d l[0-3][0-9][0-9] | sed 's:\(.*\):ls \1/*_map01.fits > \1/\1_infile.txt:' | bash<br />ls: l004/*_map01.fits: No such file or directory<br />ls: l017/*_map01.fits: No such file or directory<br />ls: l025/*_map01.fits: No such file or directory<br />ls: l108/*_map01.fits: No such file or directory<br />ls: l135/*_map01.fits: No such file or directory<br />ls: l136/*_map01.fits: No such file or directory<br />ls: l137/*_map01.fits: No such file or directory<br />ls: l138/*_map01.fits: No such file or directory<br />ls: l192/*_map01.fits: No such file or directory</pre>Also, that command was a total screwup.<br /><pre>ls -d l[0-3][0-9][0-9] | sed 's:\(.*\):ls /scratch/adam_work/\1/*_map01.fits > \1/\1_fitslist.txt:' | bash<br />ls: /scratch/adam_work/l004/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l017/*_map01.fits: No such file or directory<br />bash: line 12: l020/l020_fitslist.txt: Permission denied<br />ls: /scratch/adam_work/l025/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l108/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l135/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l136/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l137/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l138/*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l192/*_map01.fits: No such file or directory</pre><br /><br /><br />Now that those files exist, it should be possible to run a set of super-scripts like this:<br />coalign_field,'l057','070719_o29',sliced_dir='sliced_polychrome',premap=0<br />coalign_field,'l351','070725_ob3'<br />coalign_field,'l354','070724_o10'<br />coalign_field,'l357','070724_ob3'<br />coalign_field,'l000','070719_o14'<br />coalign_field,'l003','070718_o16'<br />coalign_field,'l006','070715_ob5'<br />coalign_field,'l009','070717_ob5'<br />coalign_field,'l012','070715_o10'<br />coalign_field,'l015','070714_o36'<br />coalign_field,'l018','070717_o10'<br />coalign_field,'l021','070715_o15'<br />coalign_field,'l024','070717_o15'<br />coalign_field,'l027','070715_o20'<br />coalign_field,'l030','070717_o20'<br />coalign_field,'l033','070718_ob5',sliced_dir='sliced_polychrome'<br />coalign_field,'l036','070715_o25',sliced_dir='sliced_polychrome'<br />coalign_field,'l039','070717_o25',sliced_dir='sliced_polychrome'<br />coalign_field,'l042','070715_o30',sliced_dir='sliced_polychrome'<br />coalign_field,'l044','070718_o24',sliced_dir='sliced_polychrome'<br />coalign_field,'l048','070717_o30',sliced_dir='sliced_polychrome'<br />coalign_field,'l050','070718_o29',sliced_dir='sliced_polychrome'<br />coalign_field,'l054','070724_o28',sliced_dir='sliced_polychrome'<br />coalign_field,'l057','070719_o29',sliced_dir='sliced_polychrome'<br /><br />where premap=0 means I'm not re-mapping the whole field, the sliced_dir='slice_polychrome' keyword is for those fields that do not have a regular sliced directory.<br /><br />This kind of thing ought to be really, really helpful when mapping the fields whose masters are not in the field: I'll have to modify the 'coalign_field' code to search in a different directory, though.<br /><br /><br />Yearghhh.... last command was bad too.<br /><pre>ls -d l[0-3][0-9][0-9] | sed 's:\(.*\):ls /scratch/adam_work/\1/0*_map01.fits > \1/\1_fitslist.txt:' | bash<br />ls: /scratch/adam_work/l004/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l017/0*_map01.fits: No such file or directory<br />bash: line 12: l020/l020_fitslist.txt: Permission denied<br />ls: /scratch/adam_work/l025/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l108/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l135/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l136/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l137/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l138/0*_map01.fits: No such file or directory<br />ls: /scratch/adam_work/l192/0*_map01.fits: No such file or directory</pre></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Alignment success stories]]></title>
    <link href="http://keflavich.github.com/blog/2008/09/14/alignment-success-stories/"/>
    <updated>2008-09-14T22:09:00-06:00</updated>
    <id>http://keflavich.github.com/blog/2008/09/14/alignment-success-stories</id>
    <content type="html"><![CDATA[<div class='post'>
<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/_lsgW26mWZnU/SM3ki00LXOI/AAAAAAAADYA/5izD0hrve40/s1600-h/l111_align_success.jpg"><img style="cursor: pointer;" src="http://2.bp.blogspot.com/_lsgW26mWZnU/SM3ki00LXOI/AAAAAAAADYA/5izD0hrve40/s400/l111_align_success.jpg" alt="" id="BLOGGER_PHOTO_ID_5246100427900673250" border="0" /></a><br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_lsgW26mWZnU/SM3krUz_JTI/AAAAAAAADYI/uzayPOqbiss/s1600-h/l024_align_success.jpg"><img style="cursor: pointer;" src="http://4.bp.blogspot.com/_lsgW26mWZnU/SM3krUz_JTI/AAAAAAAADYI/uzayPOqbiss/s400/l024_align_success.jpg" alt="" id="BLOGGER_PHOTO_ID_5246100573928760626" border="0" /></a><br /><br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_lsgW26mWZnU/SM3krkSjAGI/AAAAAAAADYQ/ZOoWxknrDDA/s1600-h/l024_align_failure.jpg"><img style="cursor: pointer;" src="http://1.bp.blogspot.com/_lsgW26mWZnU/SM3krkSjAGI/AAAAAAAADYQ/ZOoWxknrDDA/s400/l024_align_failure.jpg" alt="" id="BLOGGER_PHOTO_ID_5246100578083471458" border="0" /></a><br /><br />Two success stories, one failure story.<br /><br />Successes: L111, L024.  On the left is the aligned map, on the right the unaligned map.<br /><br />Failure: L024.  What's going on here?  Is it an issue of that noisy observation, or the fact that we're using a 5x1 (I think?) as a reference?</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Uh?]]></title>
    <link href="http://keflavich.github.com/blog/2008/09/11/uh/"/>
    <updated>2008-09-11T22:57:00-06:00</updated>
    <id>http://keflavich.github.com/blog/2008/09/11/uh</id>
    <content type="html"><![CDATA[<div class='post'>
I'm not sure the error reported yesterday is reproducible.<br /><br />Tonight, I started a complete re-mapping of the entire survey.  The new mapping will include beam-smoothed maps and more complete header parameters.<br /><br />I need to re-check the L111 mapping.  It looks like the region with NGC 7538 in it did alright, but the southeast region didn't do so well.  The combined maps are probably better than in any previous iteration, though.<br /><br />Tomorrow's tests will include L024 presumably.  <br /><br />It's time to get to work on this stuff.  There is definitely a reasonably efficient way to go through all of this stuff; the most difficult part is post-facto error checking.  <br /><br />Here are some awk commands I found useful (the \'s are because of VI):<br /><code> awk '{printf( $0); if ($2 \!= 0){ printf(" \%4i\%4i",$4-443,$5-207) }; if($4\!=0){printf(" \%4i,\%4i",$2-272,$3-742)}; printf("\n") }' align/l111_fitslist_shiftfind.txt</code><br /><code>awk '{print $6,$7}' align/l111_fitslist_shiftfind.txt > align/shifts_all_lb.txt</code><br /><br />One important point: I had to add a parameter to the header file to say whether the current pointing model was used or not.  It matters when applying the offsets.  Note that since I'm using the pointing model to make all the individual maps, we actually have to stick with this current set of pointing models for all coaligned maps.  <br /><br />The current models:<br /><pre><br />#   Definition of coefficientts:<br />#   start/end mjd are the start/end modified Julian date of a given pointing model<br />#   the 'a' coefficients are for the AZIMUTH OFFSET, the b coefficients are for the ZENITH ANGLE OFFSET<br />#   a0/b0 are constants (e.g. the mean)<br />#   [ab][12] are the 1st and 2nd coefficients of Azimuth.  They have been fiated to zero for most of<br />#   the past year or three.<br />#   [ab][34] are the 1st and 2nd coefficients of Zenith Angle.<br />#   A 'pointing model' is therefore something like this:<br />#   azoff = a0 + a3*alt + a4*alt^2<br />#   altoff = b0 + b3*alt + b4*alt^2<br />#<br />#   It is important that the start_mjd/end_mjd be in ascending order<br />#<br />#   WARNING: LATER THAN JULY 2007 DEFAULTS TO JULY 2007 WHICH WILL PROBABLY RESULT IN ERRORS!<br />#   I don't have a September 2007 model yet.<br />#<br />#   start_mjd      end_mjd               a0              a1            a2              a3             a4                 b0             b1             b2             b3                b4       realdate<br />      53522.5      53582.5       -9.2413685             0.0           0.0   -0.0066354359  -0.0015110883          7.0392221            0.0            0.0   -0.053635657    -0.00047042481       20050601<br />      53614.5      53643.5        84.969583             0.0           0.0      -2.4339154    0.016300937          126.00164            0.0            0.0     -2.4424431       0.015455417       20050901<br />      53887.5      53947.5        9.5305281             0.0           0.0    -0.053191181  -0.0029300592         0.13425019            0.0            0.0     0.48160040     -0.0092814256       20060601<br />      53979.5      54008.5       -98.980381             0.0           0.0      0.65354164   -0.012414466          52.841380            0.0            0.0      1.6705743      -0.020893018       20060901<br />      54101.5      54252.5       -99.078392             0.0           0.0        0.105270   -0.005943491          86.896333            0.0            0.0     0.54257415      -0.011919129       20070101<br />      54252.5      54288         -103.03831             0.0           0.0      0.20972540  -0.0060336987          100.74491            0.0            0.0   0.0099012827     -0.0033331895       20070601<br />#      54288        54313         -99.078392             0.0           0.0      0.10527000  -0.0059434911          86.896333            0.0            0.0     0.54257415      -0.011919129       20070707<br />      54288        54313         -98.803883             0.0           0.0      0.11810246  -0.0051207995          91.720516            0.0            0.0     0.18953269      -0.0078189793       20070707<br />      54313        54500         -99.078392             0.0           0.0      0.10527000  -0.0059434911          86.896333            0.0            0.0     0.54257415      -0.011919129       20070707<br /><br /><br />mjd2date,53522.5 ,y,m,d & print,y,m,d<br />mjd2date,53614.5 ,y,m,d & print,y,m,d<br />mjd2date,53887.5 ,y,m,d & print,y,m,d<br />mjd2date,53979.5 ,y,m,d & print,y,m,d<br />mjd2date,54101.5 ,y,m,d & print,y,m,d<br />mjd2date,54252.5 ,y,m,d & print,y,m,d<br />mjd2date,54288   ,y,m,d & print,y,m,d<br /></pre></div>

]]></content>
  </entry>
  
</feed>
